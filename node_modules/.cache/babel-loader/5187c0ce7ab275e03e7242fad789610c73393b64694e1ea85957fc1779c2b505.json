{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikol\\\\Downloads\\\\project1-app-master\\\\project1-app-master\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  const [theme, setTheme] = useState('light');\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      setTheme(storedTheme);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.body.className = theme;\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeProvider, \"l0NnHMBAjTNA2m05PT0LPL3eOKc=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","storedTheme","localStorage","getItem","setItem","document","body","className","documentElement","setAttribute","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nikol/Downloads/project1-app-master/project1-app-master/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport function ThemeProvider({ children }) {\n  const [theme, setTheme] = useState('light');\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      setTheme(storedTheme);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.body.className = theme;\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASM,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACC,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IACpCM,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGR,KAAK;IAC/BM,QAAQ,CAACG,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEV,KAAK,CAAC;EAC5D,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBV,QAAQ,CAACW,SAAS,IAAKA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACnE,CAAC;EAED,oBACEjB,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK;MAAEW;IAAY,CAAE;IAAAb,QAAA,EAClDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACnB,EAAA,CAzBeF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}