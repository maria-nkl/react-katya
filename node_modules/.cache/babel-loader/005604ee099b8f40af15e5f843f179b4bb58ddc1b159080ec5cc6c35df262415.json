{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst loadUsersFromLocalStorage = () => {\n  const users = localStorage.getItem('registeredUsers');\n  return users ? JSON.parse(users) : [];\n};\nconst initialState = {\n  isAuthenticated: false,\n  currentUser: null,\n  registeredUsers: loadUsersFromLocalStorage()\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    registerUser: (state, action) => {\n      const newUser = action.payload;\n      // Проверяем, нет ли уже пользователя с таким email\n      const userExists = state.registeredUsers.some(user => user.email === newUser.email);\n      if (!userExists) {\n        state.registeredUsers.push(newUser);\n        state.currentUser = newUser;\n        state.isAuthenticated = true;\n        localStorage.setItem('registeredUsers', JSON.stringify(state.registeredUsers));\n      }\n    },\n    loginUser: (state, action) => {\n      const {\n        email,\n        password\n      } = action.payload;\n      const user = state.registeredUsers.find(user => user.email === email && user.password === password);\n      if (user) {\n        state.currentUser = user;\n        state.isAuthenticated = true;\n      }\n    },\n    logoutUser: state => {\n      state.currentUser = null;\n      state.isAuthenticated = false;\n    }\n  }\n});\nexport const {\n  registerUser,\n  loginUser,\n  logoutUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","loadUsersFromLocalStorage","users","localStorage","getItem","JSON","parse","initialState","isAuthenticated","currentUser","registeredUsers","authSlice","name","reducers","registerUser","state","action","newUser","payload","userExists","some","user","email","push","setItem","stringify","loginUser","password","find","logoutUser","actions","reducer"],"sources":["C:/Users/nikol/Downloads/project1-app-master/project1-app-master/src/redux/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst loadUsersFromLocalStorage = () => {\n  const users = localStorage.getItem('registeredUsers');\n  return users ? JSON.parse(users) : [];\n};\n\nconst initialState = {\n  isAuthenticated: false,\n  currentUser: null,\n  registeredUsers: loadUsersFromLocalStorage()\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    registerUser: (state, action) => {\n      const newUser = action.payload;\n      // Проверяем, нет ли уже пользователя с таким email\n      const userExists = state.registeredUsers.some(user => user.email === newUser.email);\n\n      if (!userExists) {\n        state.registeredUsers.push(newUser);\n        state.currentUser = newUser;\n        state.isAuthenticated = true;\n        localStorage.setItem('registeredUsers', JSON.stringify(state.registeredUsers));\n      }\n    },\n    loginUser: (state, action) => {\n      const { email, password } = action.payload;\n      const user = state.registeredUsers.find(\n        user => user.email === email && user.password === password\n      );\n\n      if (user) {\n        state.currentUser = user;\n        state.isAuthenticated = true;\n      }\n    },\n    logoutUser: (state) => {\n      state.currentUser = null;\n      state.isAuthenticated = false;\n    }\n  }\n});\n\nexport const { registerUser, loginUser, logoutUser } = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EACrD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;AACvC,CAAC;AAED,MAAMK,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,WAAW,EAAE,IAAI;EACjBC,eAAe,EAAET,yBAAyB,CAAC;AAC7C,CAAC;AAED,MAAMU,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B;MACA,MAAMC,UAAU,GAAGJ,KAAK,CAACL,eAAe,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKL,OAAO,CAACK,KAAK,CAAC;MAEnF,IAAI,CAACH,UAAU,EAAE;QACfJ,KAAK,CAACL,eAAe,CAACa,IAAI,CAACN,OAAO,CAAC;QACnCF,KAAK,CAACN,WAAW,GAAGQ,OAAO;QAC3BF,KAAK,CAACP,eAAe,GAAG,IAAI;QAC5BL,YAAY,CAACqB,OAAO,CAAC,iBAAiB,EAAEnB,IAAI,CAACoB,SAAS,CAACV,KAAK,CAACL,eAAe,CAAC,CAAC;MAChF;IACF,CAAC;IACDgB,SAAS,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEM,KAAK;QAAEK;MAAS,CAAC,GAAGX,MAAM,CAACE,OAAO;MAC1C,MAAMG,IAAI,GAAGN,KAAK,CAACL,eAAe,CAACkB,IAAI,CACrCP,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKA,KAAK,IAAID,IAAI,CAACM,QAAQ,KAAKA,QACpD,CAAC;MAED,IAAIN,IAAI,EAAE;QACRN,KAAK,CAACN,WAAW,GAAGY,IAAI;QACxBN,KAAK,CAACP,eAAe,GAAG,IAAI;MAC9B;IACF,CAAC;IACDqB,UAAU,EAAGd,KAAK,IAAK;MACrBA,KAAK,CAACN,WAAW,GAAG,IAAI;MACxBM,KAAK,CAACP,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,YAAY;EAAEY,SAAS;EAAEG;AAAW,CAAC,GAAGlB,SAAS,CAACmB,OAAO;AACxE,eAAenB,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}